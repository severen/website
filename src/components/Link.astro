---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  href: string;
}

const { href, ...attrs } = Astro.props;

function isExternal(href: string) {
  return (
    !href.includes(import.meta.env.SITE) &&
    !href.startsWith("#") &&
    !href.startsWith("/") &&
    !href.startsWith("./") &&
    !href.startsWith("../")
  );
}
---

<a href={href} class:list={{ external: isExternal(href) }} {...attrs}>
  <slot /></a
>

<style>
  p {
    hyphens: auto;
    text-align: justify;
  }

  a {
    color: inherit;
    text-decoration: inherit;
    border-radius: 6px;
    transition-property: background;
    transition-duration: 0.2s;

    &:hover {
      background: oklch(from var(--accent-color-1) l c h / 10%);
    }

    &:active {
      color: var(--accent-color-1);
    }

    &::after {
      position: relative;
      top: -0.1em;
      margin-left: 0.1em;
      color: var(--accent-color-1);
      content: "\2060Â°";
      font-size: 90%;
    }

    &.external {
      &:hover {
        background: oklch(from var(--accent-color-2) l c h / 10%);
      }

      &:active {
        color: var(--accent-color-2);
      }

      &::after {
        color: var(--accent-color-2);
      }
    }
  }
</style>
